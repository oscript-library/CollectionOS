#Использовать "../../internal"

Перем ВнутренняяКоллекция;  // Оригинальная коллекция

Функция Итератор() Экспорт
	Возврат Новый ФиксированныйИтератор(ВнутренняяКоллекция.Итератор());
КонецФункции

Процедура ДляКаждого(Алгоритм) Экспорт
	ВнутренняяКоллекция.ДляКаждого(Алгоритм);
КонецПроцедуры

Функция Содержит(Элемент) Экспорт
	Возврат ВнутренняяКоллекция.Содержит(Элемент);
КонецФункции

Функция СодержитВсе(Коллекция) Экспорт
	Возврат ВнутренняяКоллекция.СодержитВсе(Коллекция);
КонецФункции

Функция Пусто() Экспорт
	Возврат ВнутренняяКоллекция.Пусто();
КонецФункции

Функция ПроцессорКоллекции() Экспорт
	Возврат ВнутренняяКоллекция.ПроцессорКоллекции();
КонецФункции

Функция Количество() Экспорт
	Возврат ВнутренняяКоллекция.Количество();
КонецФункции

Функция ВМассив() Экспорт
	Возврат ВнутренняяКоллекция.ВМассив();
КонецФункции

Процедура ОбработкаПолученияПредставления(Представление, СтандартнаяОбработка) // BSLLS:UnusedLocalMethod-off
	КоллекцииСлужебный.ОбработчикПолученияПредставленияКоллекции(ЭтотОбъект, Представление, СтандартнаяОбработка);
КонецПроцедуры

Функция ПолучитьИтератор() // BSLLS:UnusedLocalMethod-off
	Возврат Новый СлужебныйИтераторДляДвижка(Итератор());
КонецФункции

&Обходимое
&Реализует("ЧитаемаяКоллекция")
Процедура ПриСозданииОбъекта(Коллекция = Неопределено)
	
	Если Коллекция = Неопределено Тогда
		ВнутренняяКоллекция = Новый СписокМассив();
	ИначеЕсли ТипЗнч(Коллекция) = Тип("Сценарий") Тогда
		ВнутренняяКоллекция = Новый СписокМассив();
		ВнутренняяКоллекция.ДобавитьВсе(Коллекция);
	Иначе
		ВнутренняяКоллекция = Новый(ТипЗнч(Коллекция));
		ВнутренняяКоллекция.ДобавитьВсе(Коллекция);
	КонецЕсли;	

КонецПроцедуры
