#Использовать "../../internal"

Перем ВнутренняяКоллекция;  // Оригинальная коллекция
Перем Блокировка;           // Блокировка для синхронизации доступа

Функция Итератор() Экспорт
	Возврат ВнутренняяКоллекция.Итератор();
КонецФункции

Процедура ДляКаждого(Алгоритм) Экспорт
	
	Блокировка.Заблокировать();

	Попытка
		ВнутренняяКоллекция.ДляКаждого(Алгоритм);
	Исключение
		Блокировка.Разблокировать();
		ВызватьИсключение ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;

	Блокировка.Разблокировать();

КонецПроцедуры

Функция Содержит(Элемент) Экспорт

	Блокировка.Заблокировать();

	Попытка
		Результат = ВнутренняяКоллекция.Содержит(Элемент);
	Исключение
		Блокировка.Разблокировать();
		ВызватьИсключение ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
	Блокировка.Разблокировать();

	Возврат Результат;

КонецФункции

Функция СодержитВсе(Коллекция) Экспорт

	Блокировка.Заблокировать();

	Попытка
		Результат = ВнутренняяКоллекция.СодержитВсе(Коллекция);
	Исключение
		Блокировка.Разблокировать();
		ВызватьИсключение ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
	Блокировка.Разблокировать();

	Возврат Результат;

КонецФункции

Функция Пусто() Экспорт

	Блокировка.Заблокировать();

	Попытка
		Результат = ВнутренняяКоллекция.Пусто();
	Исключение
		Блокировка.Разблокировать();
		ВызватьИсключение ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
	Блокировка.Разблокировать();

	Возврат Результат;
	
КонецФункции

Функция ПроцессорКоллекции() Экспорт
	Возврат ВнутренняяКоллекция.ПроцессорКоллекции();
КонецФункции

Функция Количество() Экспорт

	Блокировка.Заблокировать();

	Попытка
		Результат = ВнутренняяКоллекция.Количество();
	Исключение
		Блокировка.Разблокировать();
		ВызватьИсключение ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
	Блокировка.Разблокировать();

	Возврат Результат;

КонецФункции

Функция ВМассив() Экспорт

	Блокировка.Заблокировать();

	Попытка
		Результат = ВнутренняяКоллекция.ВМассив();
	Исключение
		Блокировка.Разблокировать();
		ВызватьИсключение ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
	Блокировка.Разблокировать();

	Возврат Результат;

КонецФункции

Функция Добавить(Элемент) Экспорт

	Блокировка.Заблокировать();

	Попытка
		Результат = ВнутренняяКоллекция.Добавить(Элемент);
	Исключение
		Блокировка.Разблокировать();
		ВызватьИсключение ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
	Блокировка.Разблокировать();

	Возврат Результат;

КонецФункции

Функция ДобавитьВсе(Коллекция) Экспорт

	Блокировка.Заблокировать();

	Попытка
		Результат = ВнутренняяКоллекция.ДобавитьВсе(Коллекция);
	Исключение
		Блокировка.Разблокировать();
		ВызватьИсключение ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
	Блокировка.Разблокировать();

	Возврат Результат;

КонецФункции

Процедура Очистить() Экспорт

	Блокировка.Заблокировать();

	Попытка
		ВнутренняяКоллекция.Очистить();
	Исключение
		Блокировка.Разблокировать();
		ВызватьИсключение ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;

	Блокировка.Разблокировать();

КонецПроцедуры

Функция Удалить(Элемент) Экспорт

	Блокировка.Заблокировать();

	Попытка
		Результат = ВнутренняяКоллекция.Удалить(Элемент);
	Исключение
		Блокировка.Разблокировать();
		ВызватьИсключение ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
	Блокировка.Разблокировать();

	Возврат Результат;

КонецФункции

Функция УдалитьВсе(Коллекция) Экспорт

	Блокировка.Заблокировать();

	Попытка
		Результат = ВнутренняяКоллекция.УдалитьВсе(Коллекция);
	Исключение
		Блокировка.Разблокировать();
		ВызватьИсключение ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
	Блокировка.Разблокировать();

	Возврат Результат;

КонецФункции

Функция УдалитьЕсли(Предикат) Экспорт

	Блокировка.Заблокировать();

	Попытка
		Результат = ВнутренняяКоллекция.УдалитьЕсли(Предикат);
	Исключение
		Блокировка.Разблокировать();
		ВызватьИсключение ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
	Блокировка.Разблокировать();

	Возврат Результат;

КонецФункции

Функция СохранитьВсе(Коллекция) Экспорт

	Блокировка.Заблокировать();

	Попытка
		Результат = ВнутренняяКоллекция.СохранитьВсе(Коллекция);
	Исключение
		Блокировка.Разблокировать();
		ВызватьИсключение ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
	Блокировка.Разблокировать();

	Возврат Результат;

КонецФункции

Процедура ОбработкаПолученияПредставления(Представление, СтандартнаяОбработка) // BSLLS:UnusedLocalMethod-off
	КоллекцииСлужебный.ОбработчикПолученияПредставленияКоллекции(ЭтотОбъект, Представление, СтандартнаяОбработка);
КонецПроцедуры

&Реализует("Коллекция")
Процедура ПриСозданииОбъекта(Коллекция)
	
	ВнутренняяКоллекция  = Коллекция;
	Блокировка           = Новый БлокировкаРесурса(ЭтотОбъект);

КонецПроцедуры
