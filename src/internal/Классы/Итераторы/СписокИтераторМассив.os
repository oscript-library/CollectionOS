#Использовать lambdas

Перем Массив;                  // Итерируемый массив
Перем Курсор;                  // Индекс на который указывает итератор
Перем ПоследнийВозвращенный;   // Индекс последнего возвращенного элемента
Перем КоллекцияМодифицирована; // Признак того что коллекция была модифицирована вне итератора
Перем Источник;                // Коллекция которой принадлежит этот итератор
Перем Размер;                  // Размер итерируемого массива

Функция ЕстьСледующий() Экспорт
	Возврат Курсор <> Размер;
КонецФункции

Функция Следующий() Экспорт

	ПроверитьМодифицированность();

	ПоследнийВозвращенный = Курсор;
	Курсор                = Курсор + 1;

	Возврат Массив[ПоследнийВозвращенный];

КонецФункции

Процедура Удалить() Экспорт
	
	Если ПоследнийВозвращенный < 0 Тогда
		ВызватьИсключение "Итератор не указывает на элемент коллекции";
	КонецЕсли;

	ПроверитьМодифицированность();

	Массив.Удалить(ПоследнийВозвращенный);

	Курсор                = ПоследнийВозвращенный;
	ПоследнийВозвращенный = -1;
	Размер                = Размер - 1;

	ОповеститьОбИзмененииКоллекции();

КонецПроцедуры

Процедура ДляКаждогоОставшегося(Знач Действие) Экспорт
	
	Если ТипЗнч(Действие) = Тип("Строка") Тогда

		Действие = Лямбда.Выражение(Действие)
			.Интерфейс(ФункциональныеИнтерфейсы.УниПроцедура())
			.ВДействие();

	КонецЕсли;

	Пока ЕстьСледующий() Цикл
		Действие.Выполнить(Следующий());
	КонецЦикла;

КонецПроцедуры

Функция ЕстьПредыдущий() Экспорт
	Возврат Курсор <> 0;
КонецФункции

Функция Предыдущий() Экспорт

	ПроверитьМодифицированность();

	Курсор                = Курсор - 1;
	ПоследнийВозвращенный = Курсор;

	Возврат Массив[ПоследнийВозвращенный];

КонецФункции

Функция СледующийИндекс() Экспорт
	Возврат Курсор;
КонецФункции

Функция ПредыдущийИндекс() Экспорт
	Возврат Курсор - 1;
КонецФункции

Процедура КоллекцияМодифицирована(Итератор) // BSLLS:UnusedLocalMethod-off используется через ДобавитьОбработчик

	Если Итератор <> ЭтотОбъект Тогда
		КоллекцияМодифицирована = Истина;
	КонецЕсли;

КонецПроцедуры

Процедура Установить(Элемент) Экспорт

	Если ПоследнийВозвращенный < 0 Тогда
		ВызватьИсключение "Итератор не указывает на элемент коллекции";
	КонецЕсли;

	ПроверитьМодифицированность();

	Массив.Установить(ПоследнийВозвращенный, Элемент);

	ОповеститьОбИзмененииКоллекции();

КонецПроцедуры

Процедура Вставить(Элемент) Экспорт

	ПроверитьМодифицированность();

	Массив.Вставить(Курсор, Элемент);

	Размер = Размер + 1;
	Курсор = Курсор + 1;
	ПоследнийВозвращенный = -1;

	ОповеститьОбИзмененииКоллекции();

КонецПроцедуры

Процедура ПроверитьМодифицированность()
	Если КоллекцияМодифицирована Тогда
		ВызватьИсключение "Коллекция была изменена в процессе обхода";
	КонецЕсли;
КонецПроцедуры

Процедура ОповеститьОбИзмененииКоллекции()
	
	Параметры = Новый Массив();
	Параметры.Добавить(ЭтотОбъект);

	Источник.ВызватьСобытие("КоллекцияМодифицирована", Параметры);

КонецПроцедуры

&Реализует("СписокИтератор")
Процедура ПриСозданииОбъекта(пМассив, пИсточник)

	Массив   = пМассив;
	Источник = пИсточник;
	Курсор   = 0;
	Размер   = Массив.Количество();

	ПоследнийВозвращенный = -1;

	КоллекцияМодифицирована = Ложь;

	ДобавитьОбработчик Источник.КоллекцияМодифицирована, КоллекцияМодифицирована;

КонецПроцедуры
