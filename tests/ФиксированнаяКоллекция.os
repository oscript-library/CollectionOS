#Использовать asserts
#Использовать decorator

#Использовать ".."

Перем Рефлектор;               // Рефлектор
Перем ДляКаждогоВыполнилсяРаз; // Количество раз которое выполнился метод ДляКаждого
Перем КоллекцияФикстура;       // Кеш коллекции фикстуры

&Тест
Процедура ФиксированнаяКоллекцияСоздается() Экспорт

	// Когда

	Результат = Новый ФиксированнаяКоллекция;

	// Тогда

	Ожидаем.Что(Результат).ИмеетТип("ФиксированнаяКоллекция");

КонецПроцедуры

&Тест
Процедура ФиксированнаяКоллекцияСоздаетсяКопированием() Экспорт

	// Дано
	
	КопируемоеМножество = КоллекцияФикстура();

	// Когда

	Результат = Новый ФиксированнаяКоллекция(КопируемоеМножество);

	// Тогда
	
	Ожидаем.Что(Результат).ИмеетТип("ФиксированнаяКоллекция");

КонецПроцедуры

&Тест
Процедура Итератор() Экспорт
	
	// Дано

	ФиксированнаяКоллекция = Новый ФиксированнаяКоллекция;
	Рефлектор.УстановитьСвойство(
		ФиксированнаяКоллекция,
		"ВнутренняяКоллекция",
		КоллекцияФикстура()
	);

	// Когда

	Результат = ФиксированнаяКоллекция.Итератор();

	// Тогда

	Ожидаем.Что(Результат).ИмеетТип("ФиксированныйИтератор");

КонецПроцедуры

&Тест
Процедура ДляКаждого() Экспорт
	
	// Дано

	ДляКаждогоВыполнилсяРаз = 0;

	ФиксированнаяКоллекция = Новый ФиксированнаяКоллекция;
	Рефлектор.УстановитьСвойство(
		ФиксированнаяКоллекция,
		"ВнутренняяКоллекция",
		КоллекцияФикстура()
	);

	// Когда

	ФиксированнаяКоллекция.ДляКаждого(Новый Действие(ЭтотОбъект, "ДействиеДляКаждого"));

	// Тогда

	Ожидаем.Что(ДляКаждогоВыполнилсяРаз).Равно(3);

КонецПроцедуры

&Тест
Процедура Содержит() Экспорт
	
	// Дано

	ФиксированнаяКоллекция = Новый ФиксированнаяКоллекция;
	Рефлектор.УстановитьСвойство(
		ФиксированнаяКоллекция,
		"ВнутренняяКоллекция",
		КоллекцияФикстура()
	);

	// Когда

	Результат = ФиксированнаяКоллекция.Содержит(1);

	// Тогда

	Ожидаем.Что(Результат).ЭтоИстина();

КонецПроцедуры

&Тест
Процедура СодержитВсе() Экспорт
	
	// Дано

	ФиксированнаяКоллекция = Новый ФиксированнаяКоллекция;
	Рефлектор.УстановитьСвойство(
		ФиксированнаяКоллекция,
		"ВнутренняяКоллекция",
		КоллекцияФикстура()
	);

	// Когда

	Результат = ФиксированнаяКоллекция.СодержитВсе(Новый Массив);

	// Тогда

	Ожидаем.Что(Результат).ЭтоИстина();

КонецПроцедуры

&Тест
Процедура Пусто() Экспорт
	
	// Дано

	ФиксированнаяКоллекция = Новый ФиксированнаяКоллекция;
	Рефлектор.УстановитьСвойство(
		ФиксированнаяКоллекция,
		"ВнутренняяКоллекция",
		КоллекцияФикстура()
	);

	// Когда

	Результат = ФиксированнаяКоллекция.Пусто();

	// Тогда

	Ожидаем.Что(Результат).ЭтоЛожь();

КонецПроцедуры

&Тест
Процедура ПроцессорКоллекции() Экспорт
	
	// Дано

	ФиксированнаяКоллекция = Новый ФиксированнаяКоллекция;
	Рефлектор.УстановитьСвойство(
		ФиксированнаяКоллекция,
		"ВнутренняяКоллекция",
		КоллекцияФикстура()
	);

	// Когда

	Результат = ФиксированнаяКоллекция.ПроцессорКоллекции();

	// Тогда

	Ожидаем.Что(Результат).ИмеетТип("ПроцессорКоллекций");

КонецПроцедуры

&Тест
Процедура Количество() Экспорт
	
	// Дано

	ФиксированнаяКоллекция = Новый ФиксированнаяКоллекция;
	Рефлектор.УстановитьСвойство(
		ФиксированнаяКоллекция,
		"ВнутренняяКоллекция",
		КоллекцияФикстура()
	);

	// Когда

	Результат = ФиксированнаяКоллекция.Количество();

	// Тогда

	Ожидаем.Что(Результат).Равно(3);

КонецПроцедуры

&Тест
Процедура ВМассив() Экспорт
	
	// Дано

	ФиксированнаяКоллекция = Новый ФиксированнаяКоллекция;
	Рефлектор.УстановитьСвойство(
		ФиксированнаяКоллекция,
		"ВнутренняяКоллекция",
		КоллекцияФикстура()
	);

	// Когда

	Результат = ФиксированнаяКоллекция.ВМассив();

	// Тогда

	Ожидаем.Что(Результат)
		.ИмеетТип("Массив")
		.ИмеетДлину(3)
		.Содержит(1)
		.Содержит(2)
		.Содержит(3);

КонецПроцедуры

Процедура ДействиеДляКаждого(Элемент) Экспорт // BSLLS:UnusedParameters-off
	ДляКаждогоВыполнилсяРаз = ДляКаждогоВыполнилсяРаз + 1;	
КонецПроцедуры

Функция КоллекцияФикстура()
	
	Если КоллекцияФикстура <> Неопределено Тогда
		Возврат КоллекцияФикстура;
	КонецЕсли;

	Коллекция = Новый Соответствие;
	Коллекция.Вставить(1, Истина);
	Коллекция.Вставить(2, Истина);
	Коллекция.Вставить(3, Истина);

	ВнутренняяКарта = Новый Структура("Соответствие", Коллекция);

	ПолеВнутренняяКарта = Новый Поле("ВнутренняяКарта")
		.ЗначениеПоУмолчанию(ВнутренняяКарта);

	МетодИтератор = Новый Метод("Итератор")
		.Публичный()
		.ТелоМетода("Возврат Новый ИтераторСоответствие(ВнутренняяКарта.Соответствие, ЭтотОбъект);");

	МетодДляКаждого = Новый Метод("ДляКаждого")
		.Публичный()
		.Параметр(Новый ПараметрМетода("Алгоритм"))
		.ТелоМетода("
		|	Для каждого Элемент Из ВнутренняяКарта.Соответствие Цикл
		|		Алгоритм.Выполнить(Элемент.Ключ);
		|	КонецЦикла;
		|");

	МетодСодержит = Новый Метод("Содержит")
		.Публичный()
		.Параметр(Новый ПараметрМетода("Элемент"))
		.ТелоМетода("Возврат Истина;");

	МетодСодержитВсе = Новый Метод("СодержитВсе")
		.Публичный()
		.Параметр(Новый ПараметрМетода("Коллекция"))
		.ТелоМетода("Возврат Истина;");

	МетодПусто = Новый Метод("Пусто")
		.Публичный()
		.ТелоМетода("Возврат Ложь;");

	МетодПроцессорКоллекции = Новый Метод("ПроцессорКоллекции")
		.Публичный()
		.ТелоМетода("Возврат ПроцессорыКоллекций.ИзКоллекции(Новый Массив);");

	МетодКоличество = Новый Метод("Количество")
		.Публичный()
		.ТелоМетода("Возврат 3;");

	МетодВМассив = Новый Метод("ВМассив")
		.Публичный()
		.ТелоМетода(
			"Результат = Новый Массив;
			|
			|Результат.Добавить(1);
			|Результат.Добавить(2);
			|Результат.Добавить(3);
			|
			|Возврат Результат;"
		);

	КоллекцияФикстура = Новый ПостроительДекоратора()
		.Поле(ПолеВнутренняяКарта)
		.Метод(МетодИтератор)
		.Метод(МетодДляКаждого)
		.Метод(МетодСодержит)
		.Метод(МетодСодержитВсе)
		.Метод(МетодПусто)
		.Метод(МетодПроцессорКоллекции)
		.Метод(МетодКоличество)
		.Метод(МетодВМассив)
		.Построить();

	Возврат КоллекцияФикстура;

КонецФункции

Рефлектор = Новый Рефлектор();
