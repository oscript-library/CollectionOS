#Использовать asserts

#Использовать ".."

Перем ДляКаждогоВыполнилсяРаз; // Количество раз которое выполнился метод ДляКаждого

&Тест
Процедура ФиксированнаяКоллекцияЗначенийСоздаётся() Экспорт

	// Дано

	// Когда

	Результат = Новый ФиксированнаяКоллекцияЗначений(
		Новый Соответствие,
		ЭтотОбъект
	);

	// Тогда

	Ожидаем.Что(Результат).ИмеетТип("ФиксированнаяКоллекцияЗначений");

КонецПроцедуры

&Тест
Процедура Итератор() Экспорт

	// Дано

	ПроверяемаяКоллекция = Новый ФиксированнаяКоллекцияЗначений(
		Новый Соответствие,
		ЭтотОбъект
	);

	// Когда

	Результат = ПроверяемаяКоллекция.Итератор();

	// Тогда

	Ожидаем.Что(Результат).ИмеетТип("ФиксированныйИтератор");

КонецПроцедуры

&Тест
Процедура ДляКаждого() Экспорт

	// Дано

	ДляКаждогоВыполнилсяРаз = 0;

	ПроверяемаяКоллекция = Новый ФиксированнаяКоллекцияЗначений(
		Соответствие(),
		ЭтотОбъект
	);

	// Когда

	ПроверяемаяКоллекция.ДляКаждого(
		Новый Действие(ЭтотОбъект, "ДействиеДляКаждого")
	);

	// Тогда

	Ожидаем.Что(ДляКаждогоВыполнилсяРаз).Равно(3);

КонецПроцедуры

&Тест
Процедура Содержит() Экспорт

	// Дано
	
	ПроверяемаяКоллекция = Новый ФиксированнаяКоллекцияЗначений(
		Соответствие(),
		ЭтотОбъект
	);

	// Когда

	Результат = ПроверяемаяКоллекция.Содержит(3);

	// Тогда

	Ожидаем.Что(Результат).ЭтоИстина();

КонецПроцедуры

&Тест
Процедура НеСодержит() Экспорт

	// Дано
	
	ПроверяемаяКоллекция = Новый ФиксированнаяКоллекцияЗначений(
		Соответствие(),
		ЭтотОбъект
	);

	// Когда

	Результат = ПроверяемаяКоллекция.Содержит(4);

	// Тогда

	Ожидаем.Что(Результат).ЭтоЛожь();

КонецПроцедуры

&Тест
Процедура СодержитВсе() Экспорт

	// Дано
	
	ПроверяемаяКоллекция = Новый ФиксированнаяКоллекцияЗначений(
		Соответствие(),
		ЭтотОбъект
	);

	ПроверяющаяКоллекция = Новый ФиксированнаяКоллекцияЗначений(
		Соответствие(),
		ЭтотОбъект
	);

	// Когда

	Результат = ПроверяемаяКоллекция.СодержитВсе(ПроверяющаяКоллекция);

	// Тогда

	Ожидаем.Что(Результат).ЭтоИстина();

КонецПроцедуры

&Тест
Процедура НеСодержитВсе() Экспорт

	// Дано
	
	ПроверяемаяКоллекция = Новый ФиксированнаяКоллекцияЗначений(
		Соответствие(),
		ЭтотОбъект
	);

	Соответствие = Соответствие();
	Соответствие.Вставить("4", 4);

	ПроверяющаяКоллекция = Новый ФиксированнаяКоллекцияЗначений(
		Соответствие,
		ЭтотОбъект
	);

	// Когда

	Результат = ПроверяемаяКоллекция.СодержитВсе(ПроверяющаяКоллекция);

	// Тогда

	Ожидаем.Что(Результат).ЭтоЛожь();

КонецПроцедуры

&Тест
Процедура НеПусто() Экспорт

	// Дано

	ПроверяемаяКоллекция = Новый ФиксированнаяКоллекцияЗначений(
		Соответствие(),
		ЭтотОбъект
	);

	// Когда

	Результат = ПроверяемаяКоллекция.Пусто();

	// Тогда

	Ожидаем.Что(Результат).ЭтоЛожь();

КонецПроцедуры

&Тест
Процедура Пусто() Экспорт

	// Дано

	ПроверяемаяКоллекция = Новый ФиксированнаяКоллекцияЗначений(
		Новый Соответствие,
		ЭтотОбъект
	);

	// Когда

	Результат = ПроверяемаяКоллекция.Пусто();

	// Тогда

	Ожидаем.Что(Результат).ЭтоИстина();

КонецПроцедуры

&Тест
Процедура ПроцессорКоллекции() Экспорт

	// Дано

	ПроверяемаяКоллекция = Новый ФиксированнаяКоллекцияЗначений(
		Соответствие(),
		ЭтотОбъект
	);

	// Когда

	Результат = ПроверяемаяКоллекция.ПроцессорКоллекции();

	// Тогда

	Ожидаем.Что(Результат).ИмеетТип("ПроцессорКоллекций");

КонецПроцедуры

&Тест
Процедура Количество() Экспорт

	// Дано

	ПроверяемаяКоллекция = Новый ФиксированнаяКоллекцияЗначений(
		Соответствие(),
		ЭтотОбъект
	);

	// Когда

	Результат = ПроверяемаяКоллекция.Количество();

	// Тогда

	Ожидаем.Что(Результат).Равно(3);

КонецПроцедуры

&Тест
Процедура ВМассив() Экспорт

	// Дано

	ПроверяемаяКоллекция = Новый ФиксированнаяКоллекцияЗначений(
		Соответствие(),
		ЭтотОбъект
	);

	// Когда

	Результат = ПроверяемаяКоллекция.ВМассив();

	// Тогда

	Ожидаем.Что(Результат)
		.ИмеетТип("Массив")
		.ИмеетДлину(3)
		.Содержит(1)
		.Содержит(2)
		.Содержит(3);

КонецПроцедуры

Процедура ДействиеДляКаждого(Элемент) Экспорт // BSLLS:UnusedParameters-off
	ДляКаждогоВыполнилсяРаз = ДляКаждогоВыполнилсяРаз + 1;	
КонецПроцедуры

Функция Соответствие()
	
	Результат = Новый Соответствие;

	Результат.Вставить("1", 1);
	Результат.Вставить("2", 2);
	Результат.Вставить("3", 3);

	Возврат Результат;

КонецФункции